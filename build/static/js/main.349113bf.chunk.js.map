{"version":3,"sources":["Card.js","CardList.js","Searchbox.js","robots.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","username","App","onSearchChange","event","setState","target","value","state","filteredRobots","this","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAkBeA,EAhBF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAE3B,OACC,sBAAKC,UAAU,mDAAf,UACC,qBAAKC,IAAK,SAAQC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCeOK,EArBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACO,8BAECA,EAAOC,KAAI,SAACC,EAAKC,GACrB,OACA,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHbS,SCMIC,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCTAN,EAAS,CACpB,CACEL,GAAI,EACJF,KAAM,gBACNiB,SAAU,OACVhB,MAAO,qBAET,CACEC,GAAI,EACJF,KAAM,eACNiB,SAAU,YACVhB,MAAO,qBAET,CACEC,GAAI,EACJF,KAAM,mBACNiB,SAAU,WACVhB,MAAO,sBAET,CACEC,GAAI,EACJF,KAAM,mBACNiB,SAAU,WACVhB,MAAO,6BAET,CACEC,GAAI,EACJF,KAAM,mBACNiB,SAAU,SACVhB,MAAO,4BAET,CACEC,GAAI,EACJF,KAAM,uBACNiB,SAAU,mBACVhB,MAAO,2BAET,CACEC,GAAI,EACJF,KAAM,kBACNiB,SAAU,eACVhB,MAAO,0BAET,CACEC,GAAI,EACJF,KAAM,2BACNiB,SAAU,gBACVhB,MAAO,wBAET,CACEC,GAAI,EACJF,KAAM,kBACNiB,SAAU,WACVhB,MAAO,2BAET,CACEC,GAAI,GACJF,KAAM,qBACNiB,SAAU,iBACVhB,MAAO,2BClBIiB,E,kDAhCd,aAAe,IAAD,8BACb,gBAQDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACT,YAAaQ,EAAME,OAAOC,SARzC,EAAKC,MAAO,CACXjB,OAAQA,EACRK,YAAa,IAJD,E,0CAad,WAAU,IAAD,OACFa,EAAiBC,KAAKF,MAAMjB,OAAOoB,QAAO,SAAAC,GAE/C,OAAOA,EAAM5B,KAAK6B,cAAcC,SAAS,EAAKN,MAAMZ,YAAYiB,kBAGjE,OAED,sBAAK1B,UAAU,KAAf,UACE,6CACA,cAAC,EAAD,CAAWU,aAAca,KAAKP,iBAC9B,cAAC,EAAD,CAAUZ,OAAQkB,W,GA1BHM,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjDZ,M","file":"static/js/main.349113bf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\t\r\n\treturn (\r\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt ='robots'src={`https://robohash.org/${id}?200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n\t\t\t     <div>\r\n\t\t\t     {\r\n\t\t     \t\trobots.map((user,i) => {\r\n\t\t\t\t\treturn (\t\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t key={i}\r\n\t\t \t\t\t id={robots[i].id} \r\n\t\t \t\t\t name={robots[i].name} \r\n\t\t \t\t\t email={robots[i].email}/>\r\n\r\n\t\t  );\r\n\r\n\t\t})\r\n\t\t\t     }\r\n\t\t\t\t\r\n\t\t\t   </div>\r\n\t)\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName='pa3 ba n--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SearchBox;","export const robots = [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  }\r\n];\r\n","import React, {Component} from 'react';\r\nimport CardList from './CardList'\r\nimport SearchBox from './Searchbox'\r\nimport {robots} from './robots'\r\n\r\n\r\n\r\nclass App extends Component  {\r\n\r\n\tconstructor() {\r\n\t\tsuper()         \r\n\t\tthis.state ={          //state is declared in App.js so only App.js can modify the state\r\n\t\t\trobots: robots,\r\n\t\t\tsearchfield: ''\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst filteredRobots = this.state.robots.filter(robot =>{\r\n\t\t\t\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t\treturn(\r\n\t\r\n\t<div className='tc'>\t\t\r\n\t\t\t<h1>RoboFriends</h1>\r\n\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t<CardList robots={filteredRobots}/>\r\n\t</div>\r\n\t\t);\r\n\t}\r\n\t\t\r\n\r\n}\r\n\r\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport {robots} from './robots'\n\nReactDOM.render(<App/>,  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}